// <auto-generated />
using CarteiraCerta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CarteiraCerta.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarteiraCerta.Model.Ativo", b =>
                {
                    b.Property<int>("IdAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtivo"));

                    b.Property<int?>("CarteiraIdCarteira")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("PrecoAtual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdAtivo");

                    b.HasIndex("CarteiraIdCarteira");

                    b.ToTable("CarteiraCerta_Ativos", (string)null);
                });

            modelBuilder.Entity("CarteiraCerta.Model.Carteira", b =>
                {
                    b.Property<int>("IdCarteira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarteira"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NomeCarteira")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdCarteira");

                    b.HasIndex("IdUsuario");

                    b.ToTable("CarteiraCerta_Carteiras", (string)null);
                });

            modelBuilder.Entity("CarteiraCerta.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdUsuario");

                    b.ToTable("CarteiraCerta_Usuarios", (string)null);
                });

            modelBuilder.Entity("CarteiraCerta.Model.Ativo", b =>
                {
                    b.HasOne("CarteiraCerta.Model.Carteira", null)
                        .WithMany("Ativos")
                        .HasForeignKey("CarteiraIdCarteira");
                });

            modelBuilder.Entity("CarteiraCerta.Model.Carteira", b =>
                {
                    b.HasOne("CarteiraCerta.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CarteiraCerta.Model.Carteira", b =>
                {
                    b.Navigation("Ativos");
                });
#pragma warning restore 612, 618
        }
    }
}
